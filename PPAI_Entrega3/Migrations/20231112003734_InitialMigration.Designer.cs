// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PPAI_Entrega3.Persistencia;

#nullable disable

namespace PPAI_Entrega3.Migrations
{
    [DbContext(typeof(IVRContexto))]
    [Migration("20231112003734_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("PPAI_Entrega3.Entidades.CambioEstado", b =>
                {
                    b.Property<int>("idCambioEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LlamadaidLlamada")
                        .HasColumnType("INTEGER");

                    b.Property<int>("estadoidEstado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("fechaHoraInicio")
                        .HasColumnType("TEXT");

                    b.HasKey("idCambioEstado");

                    b.HasIndex("LlamadaidLlamada");

                    b.HasIndex("estadoidEstado");

                    b.ToTable("CambioEstado");
                });

            modelBuilder.Entity("PPAI_Entrega3.Entidades.Categoria", b =>
                {
                    b.Property<int>("idCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("audioMensajeOpciones")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("mensajeOpciones")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("nroOrden")
                        .HasColumnType("INTEGER");

                    b.Property<int>("opcionLlamadaidOpcionLlamada")
                        .HasColumnType("INTEGER");

                    b.HasKey("idCategoria");

                    b.HasIndex("opcionLlamadaidOpcionLlamada");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("PPAI_Entrega3.Entidades.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("dni")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nombreCompleto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("numeroCelular")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdCliente");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("PPAI_Entrega3.Entidades.Estado", b =>
                {
                    b.Property<int>("idEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("idEstado");

                    b.ToTable("Estado");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Estado");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("PPAI_Entrega3.Entidades.InformacionCliente", b =>
                {
                    b.Property<int>("idInformacionCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClienteIdCliente")
                        .HasColumnType("INTEGER");

                    b.Property<string>("datoAValidar")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("tipoInformacionidTipoInformacion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("validacionidValidacion")
                        .HasColumnType("INTEGER");

                    b.HasKey("idInformacionCliente");

                    b.HasIndex("ClienteIdCliente");

                    b.HasIndex("tipoInformacionidTipoInformacion");

                    b.HasIndex("validacionidValidacion");

                    b.ToTable("InformacionCliente");
                });

            modelBuilder.Entity("PPAI_Entrega3.Entidades.Llamada", b =>
                {
                    b.Property<int>("idLlamada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("clienteIdCliente")
                        .HasColumnType("INTEGER");

                    b.Property<string>("descripcionOperador")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("detalleAccionRequerida")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("duracion")
                        .HasColumnType("TEXT");

                    b.Property<bool>("encuestaEnviada")
                        .HasColumnType("INTEGER");

                    b.Property<int>("estadoidEstado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("observacionAuditor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("opcionLlamadaidOpcionLlamada")
                        .HasColumnType("INTEGER");

                    b.Property<int>("subOpcionLlamadaidSubOpcionLLamada")
                        .HasColumnType("INTEGER");

                    b.HasKey("idLlamada");

                    b.HasIndex("clienteIdCliente");

                    b.HasIndex("estadoidEstado");

                    b.HasIndex("opcionLlamadaidOpcionLlamada");

                    b.HasIndex("subOpcionLlamadaidSubOpcionLLamada");

                    b.ToTable("Llamada");
                });

            modelBuilder.Entity("PPAI_Entrega3.Entidades.OpcionLlamada", b =>
                {
                    b.Property<int>("idOpcionLlamada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CategoriaidCategoria")
                        .HasColumnType("INTEGER");

                    b.Property<string>("audioMensajeSubOpciones")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("mensajeSubOpciones")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("nroOrden")
                        .HasColumnType("INTEGER");

                    b.Property<int>("subOpcionLlamadaidSubOpcionLLamada")
                        .HasColumnType("INTEGER");

                    b.HasKey("idOpcionLlamada");

                    b.HasIndex("CategoriaidCategoria");

                    b.HasIndex("subOpcionLlamadaidSubOpcionLLamada");

                    b.ToTable("opcionLlamada");
                });

            modelBuilder.Entity("PPAI_Entrega3.Entidades.SubOpcionLlamada", b =>
                {
                    b.Property<int>("idSubOpcionLLamada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OpcionLlamadaidOpcionLlamada")
                        .HasColumnType("INTEGER");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("nroOrden")
                        .HasColumnType("INTEGER");

                    b.HasKey("idSubOpcionLLamada");

                    b.HasIndex("OpcionLlamadaidOpcionLlamada");

                    b.ToTable("SubOpcionLlamada");
                });

            modelBuilder.Entity("PPAI_Entrega3.Entidades.TipoInformacion", b =>
                {
                    b.Property<int>("idTipoInformacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("idTipoInformacion");

                    b.ToTable("TipoInformacion");
                });

            modelBuilder.Entity("PPAI_Entrega3.Entidades.Validacion", b =>
                {
                    b.Property<int>("idValidacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OpcionLlamadaidOpcionLlamada")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SubOpcionLlamadaidSubOpcionLLamada")
                        .HasColumnType("INTEGER");

                    b.Property<string>("audioMensajeValidacion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("nroOrden")
                        .HasColumnType("INTEGER");

                    b.Property<int>("tipoInformacionidTipoInformacion")
                        .HasColumnType("INTEGER");

                    b.HasKey("idValidacion");

                    b.HasIndex("OpcionLlamadaidOpcionLlamada");

                    b.HasIndex("SubOpcionLlamadaidSubOpcionLLamada");

                    b.HasIndex("tipoInformacionidTipoInformacion");

                    b.ToTable("Validacion");
                });

            modelBuilder.Entity("PPAI_Entrega3.Entidades.Cancelada", b =>
                {
                    b.HasBaseType("PPAI_Entrega3.Entidades.Estado");

                    b.HasDiscriminator().HasValue("Cancelada");
                });

            modelBuilder.Entity("PPAI_Entrega3.Entidades.EnCurso", b =>
                {
                    b.HasBaseType("PPAI_Entrega3.Entidades.Estado");

                    b.HasDiscriminator().HasValue("EnCurso");
                });

            modelBuilder.Entity("PPAI_Entrega3.Entidades.Finalizada", b =>
                {
                    b.HasBaseType("PPAI_Entrega3.Entidades.Estado");

                    b.HasDiscriminator().HasValue("Finalizada");
                });

            modelBuilder.Entity("PPAI_Entrega3.Entidades.Iniciada", b =>
                {
                    b.HasBaseType("PPAI_Entrega3.Entidades.Estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Iniciada");
                });

            modelBuilder.Entity("PPAI_Entrega3.Entidades.CambioEstado", b =>
                {
                    b.HasOne("PPAI_Entrega3.Entidades.Llamada", null)
                        .WithMany("cambiosDeEstado")
                        .HasForeignKey("LlamadaidLlamada");

                    b.HasOne("PPAI_Entrega3.Entidades.Estado", "estado")
                        .WithMany()
                        .HasForeignKey("estadoidEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("estado");
                });

            modelBuilder.Entity("PPAI_Entrega3.Entidades.Categoria", b =>
                {
                    b.HasOne("PPAI_Entrega3.Entidades.OpcionLlamada", "opcionLlamada")
                        .WithMany()
                        .HasForeignKey("opcionLlamadaidOpcionLlamada")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("opcionLlamada");
                });

            modelBuilder.Entity("PPAI_Entrega3.Entidades.InformacionCliente", b =>
                {
                    b.HasOne("PPAI_Entrega3.Entidades.Cliente", null)
                        .WithMany("informacionCliente")
                        .HasForeignKey("ClienteIdCliente");

                    b.HasOne("PPAI_Entrega3.Entidades.TipoInformacion", "tipoInformacion")
                        .WithMany()
                        .HasForeignKey("tipoInformacionidTipoInformacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PPAI_Entrega3.Entidades.Validacion", "validacion")
                        .WithMany()
                        .HasForeignKey("validacionidValidacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tipoInformacion");

                    b.Navigation("validacion");
                });

            modelBuilder.Entity("PPAI_Entrega3.Entidades.Llamada", b =>
                {
                    b.HasOne("PPAI_Entrega3.Entidades.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("clienteIdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PPAI_Entrega3.Entidades.Estado", "estado")
                        .WithMany()
                        .HasForeignKey("estadoidEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PPAI_Entrega3.Entidades.OpcionLlamada", "opcionLlamada")
                        .WithMany()
                        .HasForeignKey("opcionLlamadaidOpcionLlamada")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PPAI_Entrega3.Entidades.SubOpcionLlamada", "subOpcionLlamada")
                        .WithMany()
                        .HasForeignKey("subOpcionLlamadaidSubOpcionLLamada")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cliente");

                    b.Navigation("estado");

                    b.Navigation("opcionLlamada");

                    b.Navigation("subOpcionLlamada");
                });

            modelBuilder.Entity("PPAI_Entrega3.Entidades.OpcionLlamada", b =>
                {
                    b.HasOne("PPAI_Entrega3.Entidades.Categoria", null)
                        .WithMany("opciones")
                        .HasForeignKey("CategoriaidCategoria");

                    b.HasOne("PPAI_Entrega3.Entidades.SubOpcionLlamada", "subOpcionLlamada")
                        .WithMany()
                        .HasForeignKey("subOpcionLlamadaidSubOpcionLLamada")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("subOpcionLlamada");
                });

            modelBuilder.Entity("PPAI_Entrega3.Entidades.SubOpcionLlamada", b =>
                {
                    b.HasOne("PPAI_Entrega3.Entidades.OpcionLlamada", null)
                        .WithMany("subOpciones")
                        .HasForeignKey("OpcionLlamadaidOpcionLlamada");
                });

            modelBuilder.Entity("PPAI_Entrega3.Entidades.Validacion", b =>
                {
                    b.HasOne("PPAI_Entrega3.Entidades.OpcionLlamada", null)
                        .WithMany("validacion")
                        .HasForeignKey("OpcionLlamadaidOpcionLlamada");

                    b.HasOne("PPAI_Entrega3.Entidades.SubOpcionLlamada", null)
                        .WithMany("validaciones")
                        .HasForeignKey("SubOpcionLlamadaidSubOpcionLLamada");

                    b.HasOne("PPAI_Entrega3.Entidades.TipoInformacion", "tipoInformacion")
                        .WithMany()
                        .HasForeignKey("tipoInformacionidTipoInformacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tipoInformacion");
                });

            modelBuilder.Entity("PPAI_Entrega3.Entidades.Categoria", b =>
                {
                    b.Navigation("opciones");
                });

            modelBuilder.Entity("PPAI_Entrega3.Entidades.Cliente", b =>
                {
                    b.Navigation("informacionCliente");
                });

            modelBuilder.Entity("PPAI_Entrega3.Entidades.Llamada", b =>
                {
                    b.Navigation("cambiosDeEstado");
                });

            modelBuilder.Entity("PPAI_Entrega3.Entidades.OpcionLlamada", b =>
                {
                    b.Navigation("subOpciones");

                    b.Navigation("validacion");
                });

            modelBuilder.Entity("PPAI_Entrega3.Entidades.SubOpcionLlamada", b =>
                {
                    b.Navigation("validaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
